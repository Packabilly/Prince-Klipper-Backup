

#####################################################################
#	Macros
#####################################################################

#--------------------------------------------------------------------
# Power
#--------------------------------------------------------------------
[gcode_macro SHUTDOWN]
gcode:
    LCDRGB R=0 G=0 B=0                               ; Turn off LCD neopixels (see above for this macro)
    OFF                                              ; Shortcut to turn everything off (see above for this macro)
    {action_respond_info('action:poweroff')}          ; OctoPrint compatible host shutdown
	{action_call_remote_method("shutdown_machine")}   ; Moonraker compatible host shutdown

[gcode_macro OFF]
gcode:
    M84                                  ; turn steppers off
    TURN_OFF_HEATERS                     ; turn bed / hotend off
    M107                                 ; turn print cooling fan off
    #SET_FAN_SPEED FAN=Exhaust SPEED=0   ; turn exhaust fan off
    SET_FAN_SPEED FAN=BedFans SPEED=0   ; bed fan off
    SET_PIN PIN=caselight VALUE=0       ; turn case light off
#--------------------------------------------------------------------
# Diagnostic
#--------------------------------------------------------------------
[gcode_macro list_sensors]
gcode:
  { action_respond_info(printer.heaters.available_heaters | join(', ')) }
  { action_respond_info(printer.heaters.available_sensors | join(', ')) }
 #--------------------------------------------------------------------
######################################################################
# Belt Tune
######################################################################
#--------------------------------------------------------------------
# Belt
#--------------------------------------------------------------------
[gcode_macro BELT_TUNE_Z]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28                           ; home if not already homed
    {% endif %}
    SAVE_GCODE_STATE NAME=PARKCENTER
    G90                               ; absolute positioning
    G0 Z216 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2}  F6000 

[gcode_macro BELT_TUNE_XY]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28                           ; home if not already homed
    {% endif %}
    SAVE_GCODE_STATE NAME=PARKCENTER
    G90                               ; absolute positioning
    G0  Y118 X{printer.toolhead.axis_maximum.x/2} Z{printer.toolhead.axis_maximum.z/2} F6000    

#--------------------------------------------------------------------
# Input Shaper
#--------------------------------------------------------------------
[gcode_macro Auto_ADXL]
gcode:
  SHAPER_CALIBRATE


#------------------------
######################################################################
# Filament 
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

#--------------------------------------------------------------------
# Filament Change
#--------------------------------------------------------------------
[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

#--------------------------------------------------------------------
# Cold Pull
#--------------------------------------------------------------------
[gcode_macro Coldpull_PLA]
gcode:
    M106 S101                         ; part fan 40 %    
    M109 S70
    G1 E-200 F2500
    M104 S0
    M106 S0                           ; part fan off  

[gcode_macro Coldpull_ABS]
gcode:
    M106 S101                         ; part fan 40 %    
    M109 S100
    G1 E-200 F2500
    M104 S0
    M106 S0                           ; part fan off  
  #--------------------------------------------------------------------

######################################################################
# Park
######################################################################
  #--------------------------------------------------------------------

# Park front center
[gcode_macro PARKFRONT]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28                           ; home if not already homed
    {% endif %}
    SAVE_GCODE_STATE NAME=PARKFRONT
    G90                               ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} Z{printer.toolhead.axis_maximum.z/2} F6000        
    RESTORE_GCODE_STATE NAME=PARKFRONT
# Park front center, but low down.
[gcode_macro PARKFRONTLOW]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28                           ; home if not already homed
    {% endif %}
    SAVE_GCODE_STATE NAME=PARKFRONT
    G90                              ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} Z20 F6000                                     
    RESTORE_GCODE_STATE NAME=PARKFRONT
# Park front center, but low left.
[gcode_macro PARKFRONTLOWLEFT]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28                           ; home if not already homed
    {% endif %}
    SAVE_GCODE_STATE NAME=PARKFRONT
    G90                              ; absolute positioning
    G0 X60 Y{printer.toolhead.axis_minimum.y} Z20 F6000                                     
    RESTORE_GCODE_STATE NAME=PARKFRONT
# Park front center, but low right.
[gcode_macro PARKFRONTLOWRIGHT]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28                           ; home if not already homed
    {% endif %}
    SAVE_GCODE_STATE NAME=PARKFRONT
    G90                              ; absolute positioning
    G0 X290 Y{printer.toolhead.axis_minimum.y} Z20 F6000                                     
    RESTORE_GCODE_STATE NAME=PARKFRONT
# Park at center of build volume
[gcode_macro PARKCENTER]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28                           ; home if not already homed
    {% endif %}
    SAVE_GCODE_STATE NAME=PARKCENTER
    G90                               ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z{printer.toolhead.axis_maximum.z/2} F6000    
    RESTORE_GCODE_STATE NAME=PARKCENTER
  #--------------------------------------------------------------------

######################################################################
# Temperature
######################################################################
#--------------------------------------------------------------------
# Chamber
#--------------------------------------------------------------------
[gcode_macro HEATSOAK]
gcode:
    M140 S115                         ; heat bed 
    M106 S101                         ; part fan 40 %
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28                           ; home if not already homed
    {% endif %}
    SAVE_GCODE_STATE NAME=HEATSOAK
    G90                               ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y100 Z230 F6000    
    TEMPERATURE_WAIT SENSOR="temperature_sensor Frame_Back_Center" MINIMUM=30 MAXIMUM=50 ; wait for chamber temp
    RESTORE_GCODE_STATE NAME=HEATSOAK


[gcode_macro M141] #set chamber temp
gcode:
    {% set s = params.S|default(0)|float %}
    SET_TEMPERATURE_FAN_TARGET temperature_fan="chamber_exhaust" TARGET={params.S|default(0)} #target={s}


  #--------------------------------------------------------------------


######################################################################
# idm
######################################################################
  #--------------------------------------------------------------------
[gcode_macro MODEL_LIST]
gcode:
 idm_MODEL_LIST
[gcode_macro IDM_MODEL_SELECT-NAME=]
gcode:
 idm_MODEL_SELECT NAME=

[gcode_macro IDM_MODEL_SAVE-NAME=]
gcode:
 idm_MODEL_SAVE NAME=

[gcode_macro IDM_MODEL_REMOVE-NAME=]
gcode:
 idm_MODEL_REMOVE NAME=

[gcode_macro IDM_CALIBRATE_PREP]
gcode:
 M104 S150  
 {% if "xyz" not in printer.toolhead.homed_axes %}
        G28                           ; home if not already homed
    {% endif %}
 QUAD_GANTRY_LEVEL
 G28 Z
 G1 Z2 F1500
 M106 S0
 TEMPERATURE_WAIT SENSOR="temperature_sensor IDM_coil" MINIMUM=40 MAXIMUM=105 ; wait for chamber temp

[gcode_macro IDM_CALIBRATE_READY]
gcode:
 idm_CALIBRATE

[gcode_macro ESTIMATE_BACKLASH]
gcode:
 idm_ESTIMATE_BACKLASH
  #--------------------------------------------------------------------

######################################################################
# Bed Plate
######################################################################
#--------------------------------------------------------------------
# Plate Change
#--------------------------------------------------------------------
  
[gcode_macro PLATE_CHANGE]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28                           ; home if not already homed
    {% endif %}
    SAVE_GCODE_STATE NAME=PARKCENTER
    G90                               ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z250 F6000    
    RESTORE_GCODE_STATE NAME=PARKCENTER

#--------------------------------------------------------------------
# Plates
#--------------------------------------------------------------------

###### Temporary ######


###### Unique Prints Smooth ######
[gcode_macro Plate_PLA_Smooth_Unique]
gcode:
 idm_MODEL_SELECT NAME=PLA_smooth_unique

[gcode_macro Plate_PETG_Smooth_Unique]
gcode:
 idm_MODEL_SELECT NAME=PETG_smooth_unique

[gcode_macro Plate_ABS_Smooth_Unique]
gcode:
 idm_MODEL_SELECT NAME=ABS_smooth_unique

###### Fyetc Smooth ######

[gcode_macro Plate_PLA_Smooth_Fysetc]
gcode:
 idm_MODEL_SELECT NAME=PLA_smooth_fysetc

[gcode_macro Plate_PETG_Smooth_Fysetc]
gcode:
 idm_MODEL_SELECT NAME=PETG_smooth_fysetc

[gcode_macro Plate_ABS_Smooth_Fysetc]
gcode:
 idm_MODEL_SELECT NAME=ABS_smooth_fysetc

###### Fyetc Textured ######

[gcode_macro Plate_PLA_Textured_Fysetc]
gcode:
 idm_MODEL_SELECT NAME=PLA_textured_fysetc

[gcode_macro Plate_PETG_Textured_Fysetc]
gcode:
 idm_MODEL_SELECT NAME=PETG_textured_fysetc

[gcode_macro Plate_ABS_Textured_Fysetc]
gcode:
 idm_MODEL_SELECT NAME=ABS_textured_fysetc


  #--------------------------------------------------------------------

######################################################################
# QGL/Mesh/G32
######################################################################
  #--------------------------------------------------------------------

[gcode_macro G32]
gcode:
    G28
    QUAD_GANTRY_LEVEL
    G28 Z
 
[gcode_macro MESH]
gcode:
    BED_MESH_CLEAR
    G28 Z
    QUAD_GANTRY_LEVEL
    G28 Z
    BED_MESH_CALIBRATE
    #BED_MESH_PROFILE LOAD=default

#--------------------------------------------------------------------
# Sensorless
#--------------------------------------------------------------------

[gcode_macro _HOME_X]
gcode:
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc5160 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc5160 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
    G28 X
    # Move away
    G91
    G1 X-10 F1200
    
    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Y]
gcode:
    # Set current for sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc5160 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc5160 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
    G28 Y
    # Move away
    G91
    G1 Y-10 F1200

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[homing_override]
axes: xyz
gcode:
   SAFE_HOME
  
   TMC_AUTOTUNE_DISABLE_COOLSTEP_BEFORE_HOMING

  {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}


  {% if home_all or 'X' in params %}
    _HOME_X
  {% endif %}
  
  {% if home_all or 'Y' in params %}
    _HOME_Y
  {% endif %}
  
  {% if home_all or 'Z' in params %}
    G90
    G0 Y175 X175 F3000
    G28 Z
    G1 Z10
  {% endif %}

 TMC_AUTOTUNE_ENABLE_COOLSTEP_AFTER_HOMING

[force_move]
enable_force_move: True

[gcode_macro SAFE_HOME]

description: Raize Z 10mm without homing

gcode:

 G90

 SET_KINEMATIC_POSITION Z=0

 G0 Z10 F1000

[gcode_macro TMC_AUTOTUNE_DISABLE_COOLSTEP_BEFORE_HOMING]
gcode:
	set_tmc_field stepper=stepper_x field=tcoolthrs value=1048575
	set_tmc_field stepper=stepper_y field=tcoolthrs value=1048575

[gcode_macro TMC_AUTOTUNE_ENABLE_COOLSTEP_AFTER_HOMING]
gcode:
	set_tmc_field stepper=stepper_x field=tcoolthrs value=2000
	set_tmc_field stepper=stepper_y field=tcoolthrs value=2000

 
  #--------------------------------------------------------------------

######################################################################
# Preheat
######################################################################

#--------------------------------------------------------------------
#  Nozzles
#--------------------------------------------------------------------

[gcode_macro Heat_Nozzle_150]
gcode: M104 S150         

[gcode_macro Heat_Nozzle_210]
gcode: M104 S210              

[gcode_macro Heat_Nozzle_220]
gcode: M104 S220  

[gcode_macro Heat_Nozzle_230]
gcode: M104 S230

[gcode_macro Heat_Nozzle_240]
gcode: M104 S240

[gcode_macro Heat_Nozzle_250]
gcode: M104 S250   

[gcode_macro Heat_Nozzle_260]
gcode: M104 S260  

[gcode_macro Heat_Nozzle_270]
gcode: M104 S270  

[gcode_macro Heat_Nozzle_280]
gcode: M104 S280   


#--------------------------------------------------------------------
# Beds
#--------------------------------------------------------------------

[gcode_macro Heat_Bed_65]
gcode: M140 S65

[gcode_macro Heat_Bed_80]
gcode: M140 S80

[gcode_macro Heat_Bed_115]
gcode: M140 S115


#--------------------------------------------------------------------
# Preheat Filament
#--------------------------------------------------------------------

[gcode_macro Preheat_ABS]
gcode:  M104 S150                         ; set nozzle temp
        M140 S115                         ; set bed temp
        M141 S0                          ; exhaust fan off
        M106 S101                         ; part fan 40 %

[gcode_macro Preheat_PLA]
gcode:  M104 S150                         ; set nozzle temp
        M140 S65                          ; set bed temp
        M141 S1                          ; exhaust fan on above 1C
        M106 S101                         ; part fan 40 %

[gcode_macro Preheat_PETG]
gcode:  M104 S150  
        M140 S80


######################################################################
# Speed Test
######################################################################

  #--------------------------------------------------------------------
# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10
  #--------------------------------------------------------------------
  
[gcode_macro TEST_SPEED]
gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}

    {% for i in range(iterations) %}
        # Large pattern
            # Diagonals
            G0 X{x_min} Y{y_min} F{speed*60}
            G0 X{x_max} Y{y_max} F{speed*60}
            G0 X{x_min} Y{y_min} F{speed*60}
            G0 X{x_max} Y{y_min} F{speed*60}
            G0 X{x_min} Y{y_max} F{speed*60}
            G0 X{x_max} Y{y_min} F{speed*60}
            
            # Box
            G0 X{x_min} Y{y_min} F{speed*60}
            G0 X{x_min} Y{y_max} F{speed*60}
            G0 X{x_max} Y{y_max} F{speed*60}
            G0 X{x_max} Y{y_min} F{speed*60}
        
        # Small pattern
            # Small diagonals 
            G0 X{x_center_min} Y{y_center_min} F{speed*60}
            G0 X{x_center_max} Y{y_center_max} F{speed*60}
            G0 X{x_center_min} Y{y_center_min} F{speed*60}
            G0 X{x_center_max} Y{y_center_min} F{speed*60}
            G0 X{x_center_min} Y{y_center_max} F{speed*60}
            G0 X{x_center_max} Y{y_center_min} F{speed*60}
            
            # Small box
            G0 X{x_center_min} Y{y_center_min} F{speed*60}
            G0 X{x_center_min} Y{y_center_max} F{speed*60}
            G0 X{x_center_max} Y{y_center_max} F{speed*60}
            G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 

    # Re-home and get position again for comparison:
        G28
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED
  #--------------------------------------------------------------------

######################################################################
# idm Data Sample
######################################################################
  #--------------------------------------------------------------------
[gcode_macro DATA_SAMPLE]
gcode:
  M106 S255
  TEMPERATURE_WAIT SENSOR='temperature_sensor idm_coil' MAXIMUM=40
  M106 S0
  G28
  G0 Z1
  M104 S250
  M140 S95
  G4 P1000
  idm_STREAM FILENAME=data1
  TEMPERATURE_WAIT SENSOR='temperature_sensor idm_coil' MINIMUM=70
  idm_STREAM FILENAME=data1
  M104 S0
  M140 S0
  M106 S255
  G0 Z80
  TEMPERATURE_WAIT SENSOR='temperature_sensor idm_coil' MAXIMUM=40
  M106 S0
  G28 Z0
  G0 Z2
  M104 S250
  M140 S95
  G4 P1000
  idm_STREAM FILENAME=data2
  TEMPERATURE_WAIT SENSOR='temperature_sensor idm_coil' MINIMUM=70
  idm_STREAM FILENAME=data2
  M104 S0
  M140 S0
  M106 S255
  G0 Z80
  TEMPERATURE_WAIT SENSOR='temperature_sensor idm_coil' MAXIMUM=40
  M106 S0
  G28 Z0
  G0 Z3
  M104 S250
  M140 S95
  G4 P1000
  idm_STREAM FILENAME=data3
  TEMPERATURE_WAIT SENSOR='temperature_sensor idm_coil' MINIMUM=70
  idm_STREAM FILENAME=data3
  M104 S0
  M140 S0
  M106 S255
  G0 Z80
  TEMPERATURE_WAIT SENSOR='temperature_sensor idm_coil' MAXIMUM=40
  M106 S0
  G28 Z0
  G0 Z5
  M104 S250
  M140 S95
  G4 P1000
  idm_STREAM FILENAME=data4
  TEMPERATURE_WAIT SENSOR='temperature_sensor idm_coil' MINIMUM=70
  idm_STREAM FILENAME=data4
  M104 S0
  M140 S0
  #--------------------------------------------------------------------

######################################################################
#  Klipper Backup
######################################################################
  #--------------------------------------------------------------------

[gcode_macro update_git]
gcode:
    RUN_SHELL_COMMAND CMD=update_git_script

[gcode_shell_command update_git_script]
command: bash -c "bash $HOME/klipper-backup/script.sh"
timeout: 90.0
verbose: True